@model PurchaseOrderCreateModel

@{
	ViewBag.PageTitle = T("Admin.PurchaseOrders.SelectProducts").Text;
}

<nop-antiforgery-token />

<form asp-controller="PurchaseOrder" asp-action="Create" method="post" id="purchase-order-form">
	<div class="content-header clearfix">
		<h1 class="pull-left">
			@T("Admin.PurchaseOrders.SelectProducts")
		</h1>
	</div>

	<div class="form-horizontal">
		<div class="row justify-content-center">
			<div class="col-md-4">
				<div class="form-group row">
					<div class="col-md-4 text-right">
						<nop-label asp-for="SelectedSupplierId" />
					</div>
					<div class="col-md-8">
                        <nop-select asp-for="SelectedSupplierId" asp-items="Model.AvailableSuppliers" />
                        <span asp-validation-for="SelectedSupplierId"></span>
					</div>
				</div>
			</div>
		</div>

        <div class="card-body">
            <div class="form-group row">
                <div class="col-md-12" style="overflow-x: auto;">
                    <table class="table table-hover table-bordered">
                        <thead>
                        <tr>
                            <th class="@NopColumnClassDefaults.CenterAll">@T("Admin.Orders.Products.Picture")</th>
                            <th class="@NopColumnClassDefaults.CenterAll">@T("Admin.Orders.Products.ProductName")</th>
                            <th class="@NopColumnClassDefaults.CenterAll">@T("Admin.Orders.Products.Price")</th>
                            <th class="@NopColumnClassDefaults.CenterAll">@T("Admin.Orders.Products.Quantity")</th>
                            <th class="@NopColumnClassDefaults.CenterAll">@T("Admin.Orders.Products.Total")</th>
                            <th class="@NopColumnClassDefaults.CenterAll">@T("Admin.Common.Edit")</th>
                        </tr>
                        </thead>
                        <tbody id="selected-products-container">
                        @if (Model.SelectedProducts != null)
                        {
                            foreach (var item in Model.SelectedProducts.Where(p => p.Selected))
                            {
                                <tr data-product-id="@item.ProductId">
                                    <td class="text-center">
                                        <img src="@item.PictureThumbnailUrl" alt="" width="50" />
                                    </td>
                                    <td>
                                        <input type="hidden" name="SelectedProducts[@item.ProductId].ProductId" value="@item.ProductId" />
                                        <input type="hidden" name="SelectedProducts[@item.ProductId].Selected" value="true" />
                                        <input type="hidden" name="SelectedProducts[@item.ProductId].ProductName" value="@item.ProductName" />
                                        <input type="hidden" name="SelectedProducts[@item.ProductId].ProductSku" value="@item.ProductSku" />
                                        <input type="hidden" name="SelectedProducts[@item.ProductId].PictureThumbnailUrl" value="@item.PictureThumbnailUrl" />
                                        <em>@item.ProductName</em>
                                        @if (!string.IsNullOrEmpty(item.ProductSku))
                                        {
                                            <p>
                                                <strong>@T("Admin.Orders.Products.SKU")</strong><text>:</text>
                                                @item.ProductSku
                                            </p>
                                        }
                                    </td>
                                    <td class="text-center">
                                        <div id="pnlEditUnitCost@(item.ProductId)" style="display:none">
                                            <input name="SelectedProducts[@item.ProductId].UnitCost"
                                                   type="number"
                                                   value="@item.UnitCost.ToString("0.00")"
                                                   id="unitCost@(item.ProductId)"
                                                   step="0.01"
                                                   min="0"
                                                   class="form-control input-sm" />
                                        </div>
                                        <div id="displayUnitCost@(item.ProductId)">
                                            @item.UnitCost.ToString("0.00")
                                        </div>
                                    </td>
                                    <td class="text-center">
                                        <div id="pnlEditQuantity@(item.ProductId)" style="display:none">
                                            <input name="SelectedProducts[@item.ProductId].QuantityToOrder"
                                                   type="number"
                                                   value="@item.QuantityToOrder"
                                                   id="quantity@(item.ProductId)"
                                                   min="1"
                                                   class="form-control input-sm" />
                                        </div>
                                        <div id="displayQuantity@(item.ProductId)">
                                            @item.QuantityToOrder
                                        </div>
                                    </td>
                                    <td class="text-center">
                                        @((item.QuantityToOrder * item.UnitCost).ToString("0.00"))
                                    </td>
                                    <td class="text-center">
                                        <button type="button" class="btn btn-default edit-product-btn"
                                                data-product-id="@item.ProductId">
                                            <i class="fas fa-pencil"></i>
                                            @T("Admin.Common.Edit")
                                        </button>
                                        <button type="button" class="btn btn-default delete-product-btn"
                                                data-product-id="@item.ProductId">
                                            <i class="far fa-trash-can"></i>
                                            @T("Admin.Common.Delete")
                                        </button>
                                        <button type="button" class="btn btn-default save-product-btn"
                                                data-product-id="@item.ProductId" style="display:none">
                                            <i class="far fa-floppy-disk"></i>
                                            @T("Admin.Common.Save")
                                        </button>
                                        <button type="button" class="btn btn-default cancel-edit-btn"
                                                data-product-id="@item.ProductId" style="display:none">
                                            <i class="fas fa-times"></i>
                                            @T("Admin.Common.Cancel")
                                        </button>
                                    </td>
                                </tr>
                            }
                        }
						else
                        {
                            <tr class="no-data">
                                <td colspan="6" class="@NopColumnClassDefaults.CenterAll">@T("Admin.Common.NoDataAvailableInTable")</td>
                            </tr>
                        }
                        </tbody>
                        <tfoot>
                        <tr>
                            <td colspan="4" class="text-right"><strong>@T("Admin.Orders.Products.GrandTotal")</strong></td>
                            <td class="text-center" id="grand-total-amount">0.00</td>
                            <td></td>
                        </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>

        <div class="card-footer">
            <div class="row">
                <div class="col-md-6">
                    <button type="button" id="btnAddProduct" class="btn btn-primary">
                        @T("Admin.PurchaseOrders.AddProduct")
                    </button>
                </div>
                <div class="col-md-6 text-right">
                    <button type="submit" class="btn btn-success" id="place-order-button">
                        <i class="fas fa-check"></i>
                        @T("Admin.Catalog.PurchaseOrder.PlaceOrder")
                    </button>
                </div>
            </div>
        </div>
	</div>
</form>

<script>
	$(document).ready(function() {
		// Initialize popup window for adding products
		$('#btnAddProduct').click(function() {
			var supplierId = $('#@Html.IdFor(model => model.SelectedSupplierId)').val();
			if (!supplierId || supplierId == 0) {
				alert('@T("Admin.PurchaseOrders.SelectSupplierWarning")');
				return;
			}
			OpenWindow('@(Url.Action("ProductAddPopup", "PurchaseOrder", new { btnId = "btnRefreshSelectedProducts", formId = "purchase-order-form" }))' + '&supplierId=' + supplierId, 800, 800, true);
			updateGrandTotal();
		});

		// Handle edit button click
		$(document).on('click', '.edit-product-btn', function() {
			var productId = $(this).data('product-id');
			toggleEditMode(productId, true);
		});

		// Handle save button click
			$(document).on('click', '.save-product-btn', function() {
		var productId = $(this).data('product-id');
		var quantity = $('#quantity' + productId).val();
		var unitCost = $('#unitCost' + productId).val();

		// Update display values
		$('#displayQuantity' + productId).text(quantity);
		$('#displayUnitCost' + productId).text(parseFloat(unitCost).toFixed(2));

		updateNoDataMessage();
		// Update totals
		updateGrandTotal();
		toggleEditMode(productId, false);
	});

		// Handle cancel button click
		$(document).on('click', '.cancel-edit-btn', function() {
			var productId = $(this).data('product-id');
			toggleEditMode(productId, false);

			// Reset values to original
			var originalQuantity = $('#displayQuantity' + productId).text();
			var originalUnitCost = $('#displayUnitCost' + productId).text();
			$('#quantity' + productId).val(originalQuantity);
			$('#unitCost' + productId).val(originalUnitCost);
		});

		// Handle delete button click
		$(document).on('click', '.delete-product-btn', function() {
			var productId = $(this).data('product-id');
			$('#delete-selected-product-confirmation').attr('data-productid', productId);
			$("#delete-selected-product-confirmation").modal('show');
		});

		// Handle confirmed delete
			$('#delete-selected-product-confirmation-button').click(function() {
		var productId = $('#delete-selected-product-confirmation').attr('data-productid');
		$('tr[data-product-id="' + productId + '"]').remove();
		$("#delete-selected-product-confirmation").modal('hide');

		// Update grand total after deletion
		updateGrandTotal();

		if ($('#selected-products-container tr').length === 0) {
			alert('@T("Admin.PurchaseOrders.SelectProductsWarning")');
		}
	});

		// Form submission handler
	$('#purchase-order-form').on('submit', function(e) {
		e.preventDefault();

		// Validate supplier is selected
		if (!$('#@Html.IdFor(model => model.SelectedSupplierId)').val()) {
			alert('@T("Admin.PurchaseOrders.SelectSupplierWarning")');
			return false;
		}

		// Validate at least one product is selected
		if ($('#selected-products-container tr').length === 0) {
			alert('@T("Admin.PurchaseOrders.SelectProductsWarning")');
			return false;
		}

		var totalAmount = updateGrandTotal();

	// Add hidden field for total amount if it doesn't exist
	if ($('#TotalAmount').length === 0) {
		$(this).append('<input type="hidden" id="TotalAmount" name="TotalAmount" value="' + totalAmount + '" />');
	} else {
		$('#TotalAmount').val(totalAmount);
	}

		// Show loading indicator
		var $submitButton = $('#place-order-button');
		$submitButton.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> @T("Admin.Common.Processing")');

		// Submit the form
		$.ajax({
			url: $(this).attr('action'),
			type: 'POST',
			data: $(this).serialize(),
			success: function(response) {
				if (response.success) {
					if (response.redirect) {
						window.location.href = response.redirect;
					}
				} else {
					// Show detailed error message
					var errorMessage = response.message || '@T("Admin.Common.UnknownError")';
					alert(errorMessage);
				}
			},
			error: function(xhr, status, error) {
				alert('@T("Admin.Common.ErrorOccurred")' + ': ' + error);
			},
			complete: function() {
				$submitButton.prop('disabled', false).html('@T("Admin.Catalog.PurchaseOrder.PlaceOrder")');
			}
		});
	});

		// Function to toggle edit mode
		function toggleEditMode(productId, editMode) {
			if (editMode) {
				$('#pnlEditQuantity' + productId).show();
				$('#pnlEditUnitCost' + productId).show();
				$('.save-product-btn[data-product-id="' + productId + '"]').show();
				$('.cancel-edit-btn[data-product-id="' + productId + '"]').show();
				$('#quantity' + productId).prop("disabled", false);
				$('#unitCost' + productId).prop("disabled", false);
				$('.edit-product-btn[data-product-id="' + productId + '"]').hide();
				$('.delete-product-btn[data-product-id="' + productId + '"]').hide();
			} else {
				$('#pnlEditQuantity' + productId).hide();
				$('#pnlEditUnitCost' + productId).hide();
				$('.save-product-btn[data-product-id="' + productId + '"]').hide();
				$('.cancel-edit-btn[data-product-id="' + productId + '"]').hide();
				$('#quantity' + productId).prop("disabled", true);
				$('#unitCost' + productId).prop("disabled", true);
				$('.edit-product-btn[data-product-id="' + productId + '"]').show();
				$('.delete-product-btn[data-product-id="' + productId + '"]').show();
			}
		}
	});

		function updateNoDataMessage() {
		var container = $('#selected-products-container');
		var noDataRow = container.find('tr.no-data');

		if (container.find('tr[data-product-id]').length === 0) {
			if (noDataRow.length === 0) {
				container.append('<tr class="no-data"><td colspan="6" class="@NopColumnClassDefaults.CenterAll">@T("Admin.Common.NoDataAvailableInTable")</td></tr>');
			}
		} else {
			noDataRow.remove();
		}
	}

		function updateGrandTotal() {
		var grandTotal = 0;

		// Calculate sum of all product totals
		$('#selected-products-container tr').each(function() {
			var quantity = parseFloat($(this).find('td:eq(3)').text().trim()) || 0;
			var unitCost = parseFloat($(this).find('td:eq(2)').text().trim()) || 0;
			var lineTotal = quantity * unitCost;

			// Update the line total cell (just in case)
			$(this).find('td:eq(4)').text(lineTotal.toFixed(2));

			grandTotal += lineTotal;
		});

		// Update the grand total display
		$('#grand-total-amount').text(grandTotal.toFixed(2));
		 updateNoDataMessage();
		return grandTotal;
	}

	// This function will be called from the popup window
	function updateSelectedProducts(products) {
		var container = $('#selected-products-container');
		container.empty();

		products.forEach(function(product) {
			var rowHtml = `
				<tr data-product-id="${product.ProductId}">
					<td class="text-center">
						<img src="${product.PictureThumbnailUrl || '/images/default-image.png'}" alt="" width="50" />
					</td>
					<td>
						<input type="hidden" name="SelectedProducts[${product.ProductId}].ProductId" value="${product.ProductId}" />
						<input type="hidden" name="SelectedProducts[${product.ProductId}].Selected" value="true" />
						<input type="hidden" name="SelectedProducts[${product.ProductId}].ProductName" value="${product.ProductName}" />
						<input type="hidden" name="SelectedProducts[${product.ProductId}].ProductSku" value="${product.ProductSku}" />
						<input type="hidden" name="SelectedProducts[${product.ProductId}].PictureThumbnailUrl" value="${product.PictureThumbnailUrl}" />
						<em>${product.ProductName}</em>
						<p>
							<strong>@T("Admin.Orders.Products.SKU")</strong>: ${product.ProductSku}
						</p>
					</td>
					<td class="text-center">
						<div id="pnlEditUnitCost${product.ProductId}" style="display:none">
							<input name="SelectedProducts[${product.ProductId}].UnitCost"
								   type="number"
								   value="${product.UnitCost.toFixed(2)}"
								   id="unitCost${product.ProductId}"
								   step="0.01"
								   min="0"
								   class="form-control input-sm"/>
						</div>
						<div id="displayUnitCost${product.ProductId}">
							${product.UnitCost.toFixed(2)}
						</div>
					</td>
					<td class="text-center">
						<div id="pnlEditQuantity${product.ProductId}" style="display:none">
							<input name="SelectedProducts[${product.ProductId}].QuantityToOrder"
								   type="number"
								   value="${product.QuantityToOrder}"
								   id="quantity${product.ProductId}"
								   min="1"
								   class="form-control input-sm"/>
						</div>
						<div id="displayQuantity${product.ProductId}">
							${product.QuantityToOrder}
						</div>
					</td>
					<td class="text-center">
						${(product.QuantityToOrder * product.UnitCost).toFixed(2)}
					</td>
					<td class="text-center">
						<button type="button" class="btn btn-default edit-product-btn"
								data-product-id="${product.ProductId}">
							<i class="fas fa-pencil"></i>
	@T("Admin.Common.Edit")
						</button>
						<button type="button" class="btn btn-default delete-product-btn"
								data-product-id="${product.ProductId}">
							<i class="far fa-trash-can"></i>
	@T("Admin.Common.Delete")
						</button>
						<button type="button" class="btn btn-default save-product-btn"
								data-product-id="${product.ProductId}" style="display:none">
							<i class="far fa-floppy-disk"></i>
	@T("Admin.Common.Save")
						</button>
						<button type="button" class="btn btn-default cancel-edit-btn"
								data-product-id="${product.ProductId}" style="display:none">
							<i class="fas fa-times"></i>
	@T("Admin.Common.Cancel")
						</button>
					</td>
				</tr>
			`;
			container.append(rowHtml);
			updateGrandTotal();
		});
	}
</script>

<!-- Add this confirmation dialog at the bottom of your page -->
<div id="delete-selected-product-confirmation" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="delete-selected-product-confirmation-title">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="delete-selected-product-confirmation-title">@T("Admin.Common.AreYouSure")</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                @T("Admin.Common.DeleteConfirmation")
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">@T("Admin.Common.NoCancel")</button>
                <button type="button" id="delete-selected-product-confirmation-button" class="btn btn-primary">@T("Admin.Common.YesDelete")</button>
            </div>
        </div>
    </div>
</div>

<style>
    #grand-total-amount {
        font-weight: bold;
        font-size: 1.1em;
        color: #007bff;
    }
    tfoot tr {
        background-color: #f8f9fa;
    }
</style>